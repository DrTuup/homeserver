networks:
  proxy:
    name: proxy
    external: true
  plexnet:
    name: plexnet
    driver: macvlan
    driver_opts:
      parent: bond0
    ipam:
      config:
        - subnet: "192.168.1.0/24"
          ip_range: "192.168.1.200/32"
          gateway: "192.168.1.1"

services:
  gluetun:
    container_name: gluetun
    image: qmcgaw/gluetun
    networks:
      - proxy
    restart: unless-stopped
    ports:
      - "6881:6881"
      - "6881:6881/udp"
      - "8080:8080"
      - "7878:7878"
      - "8989:8989"
      - "9696:9696"
      - "8191:8191"
    cap_add:
      - NET_ADMIN
    environment:
      - VPN_SERVICE_PROVIDER=${VPN_SERVICE_PROVIDER}
      - OPENVPN_USER=${VPN_USERNAME}
      - OPENVPN_PASSWORD=${VPN_PASSWORD}
      - SERVER_HOSTNAMES=${VPN_HOSTNAMES}
    volumes:
      - ../config/mediastack/gluetun:/gluetun
    labels:
      - com.centurylinklabs.watchtower.enable=false

  qbittorrent:
    image: lscr.io/linuxserver/qbittorrent:latest
    container_name: qbittorrent
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
      - WEBUI_PORT=8080
    volumes:
      - ../config/mediastack/qbittorrent:/config
      - ${DRIVE_PATH}/Downloads:/downloads
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.qbt.rule=Host(`${QBITTORRENT_DOMAIN}`)
      - traefik.http.routers.qbt.tls=true
      - traefik.http.routers.qbt.tls.certresolver=cloudflare
      - traefik.http.services.qbt.loadbalancer.server.port=8080
    depends_on:
      gluetun:
        condition: service_healthy

  radarr:
    image: lscr.io/linuxserver/radarr:latest
    container_name: radarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ../config/mediastack/radarr:/config
      - ${DRIVE_PATH}:/nas
      - ${DRIVE_PATH}/Downloads:/downloads
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.radarr.rule=Host(`${RADARR_DOMAIN}`)
      - traefik.http.routers.radarr.tls=true
      - traefik.http.routers.radarr.tls.certresolver=cloudflare
      - traefik.http.services.radarr.loadbalancer.server.port=7878
    depends_on:
      gluetun:
        condition: service_healthy

  sonarr:
    image: lscr.io/linuxserver/sonarr:latest
    container_name: sonarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=${TZ}
    volumes:
      - ../config/mediastack/sonarr:/config
      - ${DRIVE_PATH}:/nas
      - ${DRIVE_PATH}/Downloads:/downloads
    restart: unless-stopped
    labels:
      - traefik.enable=true
      - traefik.http.routers.sonarr.rule=Host(`${SONARR_DOMAIN}`)
      - traefik.http.routers.sonarr.tls=true
      - traefik.http.routers.sonarr.tls.certresolver=cloudflare
      - traefik.http.services.sonarr.loadbalancer.server.port=8989
    depends_on:
      gluetun:
        condition: service_healthy

  plex:
    container_name: plex
    hostname: plex
    networks:
      plexnet:
        ipv4_address: 192.168.1.200
    restart: unless-stopped
    environment:
      - TZ=${TZ}
      - PLEX_CLAIM=${PLEX_CLAIM_TOKEN}
      - ADVERTISE_IP="http://192.168.1.200:32400/"
    volumes:
      - ../config/mediastack/plex:/config
      - ../config/mediastack/plex/transcode:/transcode
      - ${DRIVE_PATH}:/media
    devices:
      - /dev/dri:/dev/dri
    image: plexinc/pms-docker

  overseerr:
    image: sctx/overseerr:latest
    container_name: overseerr
    environment:
      - LOG_LEVEL=debug
      - TZ=${TZ}
    volumes:
      - ../config/mediastack/overseerr:/app/config
    restart: unless-stopped
    networks:
      - proxy
    ports:
      - "5055:5055"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.overseerr.rule=Host(`${OVERSEERR_DOMAIN}`)"
      - "traefik.http.routers.overseerr.tls=true"
      - "traefik.http.routers.overseerr.tls.certresolver=cloudflare"
      - "traefik.http.services.overseerr.loadbalancer.server.port=5055"

  prowlarr:
    container_name: prowlarr
    image: ghcr.io/hotio/prowlarr
    network_mode: "service:gluetun"
    environment:
      - PUID=1000
      - PGID=1000
      - UMASK=002
      - TZ=Europe/Amsterdam
    volumes:
      - ../config/mediastack/prowlarr:/config
    labels:
      - traefik.enable=true
      - traefik.http.routers.prowlarr.rule=Host(`${PROWLARR_DOMAIN}`)
      - traefik.http.routers.prowlarr.tls=true
      - traefik.http.routers.prowlarr.tls.certresolver=cloudflare
      - traefik.http.services.prowlarr.loadbalancer.server.port=9696
    restart: unless-stopped
    depends_on:
      gluetun:
        condition: service_healthy

  flaresolverr:
    container_name: flaresolverr
    network_mode: "service:gluetun"
    environment:
      - LOG_LEVEL=info
    restart: unless-stopped
    image: ghcr.io/flaresolverr/flaresolverr:latest
    depends_on:
      gluetun:
        condition: service_healthy
