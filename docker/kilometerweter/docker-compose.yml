services:
  web:
    image: drtuup/kilometerweter-frontend
    env_file:
      - .env
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.kilometerweter.rule=Host(`kilometerweter.rubenclaessens.nl`)
      - traefik.http.routers.kilometerweter.tls=true
      - traefik.http.routers.kilometerweter.tls.certresolver=cloudflare
      - traefik.http.services.kilometerweter.loadbalancer.server.port=3000


  api:
    image: drtuup/kilometerweter-backend
    depends_on:
      db:
        condition: service_healthy
    env_file:
      - .env
    networks:
      - proxy
    labels:
      - traefik.enable=true
      - traefik.http.routers.kilometerweter-api.rule=Host(`kilometerweter-api.rubenclaessens.nl`)
      - traefik.http.routers.kilometerweter-api.tls=true
      - traefik.http.routers.kilometerweter-api.tls.certresolver=cloudflare
      - traefik.http.services.kilometerweter-api.loadbalancer.server.port=8080

  db:
    image: postgres:latest
    environment:
      POSTGRES_USER: ${DB_USERNAME}
      POSTGRES_PASSWORD: ${DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USERNAME}"]
      interval: 10s
      timeout: 5s
      retries: 5
    networks:
      - proxy

volumes:
  postgres_data:

networks:
  proxy:
    name: proxy
    external: true
